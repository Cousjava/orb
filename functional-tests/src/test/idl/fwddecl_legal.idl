/*
 * Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License v. 1.0, which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

// Required tests:
// This compiles
// We can create and manipulate instances of all of these classes
// The typecodes are correct

module corba {
    module fwddecl {
        // Old style recursive definition
        struct Foo {
            long value ;
            sequence<Foo> chain ;
        } ;

        interface Sample ;

        // Equivalent with forward
        struct NewFoo ;
        typedef sequence<NewFoo> NewFooSeq ;
        struct NewFoo {
            long value ;
            NewFooSeq chain ;
        } ;

        // multiple level
        union Bar ;
        typedef sequence<Bar> BarSeq ;
        union Bar switch(long) {
            case 0:
                long l_mem ;
            case 1:
                struct Foo {
                    double d_mem ;
                    BarSeq nested ;
                } s_mem ;
        } ;

        struct MoreFoo ;

        typedef sequence<MoreFoo> MoreFooSeq ;
        typedef sequence<MoreFooSeq> MoreFooTree ;

        struct MoreFoo {
            long l_mem ;
            Sample interf ;
            MoreFooSeq chain ;
            MoreFooTree tree ;
        } ;

        interface Sample {
            MoreFooSeq op1() ;
            void op2(
                in MoreFooTree t 
            ) ;
        } ;
    } ;  
} ;  
