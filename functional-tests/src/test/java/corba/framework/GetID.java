/*
 * Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License v. 1.0, which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

package corba.framework;

/**
 * Generates unique test-ids 
 *
 * The GetID class generates a test-ID for identifying tests in the 
 * log files. The ID is generated by replacing the '.'s in the
 * full-qualified package name by '_'s, and then appending a user-specified
 * string Id. Since, the fully qualified package name is unique across a 
 * test-suite, this results in unique IDs.
 *
 * @author Nandkumar Kesavan (nanduk@eng.sun.com)
 * @version 1.1, 04/04/01
 */
public class GetID {
 
   /**
    * Generates a unique ID for a test from the package name and a 
    * user-specified id.
    *
    * @param  o   an instance of the test class
    * @param  id  a user-specified id to be appended 
    *             to the id generated by this method.
    *             <em>Note: Usually, one would specify a string,</em>
    *             <em>representive of the test case. </em>
    * @return     a unique string ID for the test 
    */
   public static String generateID(Object o, String id)
   {
      Package p = o.getClass().getPackage();
      String packageName = p.getName();
     
      //Substitute all .'s with _'s. Since . are illegal in 
      //class or package names, they wouldn't occur anywhere
      //other than as package separators. 
      String ID = packageName.replace('.','_');

      //Append the non-empty user id
          if (!id.equals(""))
        ID = ID + "_" + id;
      return ID; 
   }

   /**
    * Generates a unique ID for a test from the class name.
    *
    * @param  o   an instance of the test class
    * @return     a unique string ID for the test 
    */
   public static String generateID(Object o)
   {
      Class c = o.getClass();
      String className = c.getName();

      //Substitute all .'s with _'s. Since . are illegal in
      //class or package names, they wouldn't occur anywhere
      //other than as package separators.
      String ID = className.replace('.','_');
      return ID;
   }
}
